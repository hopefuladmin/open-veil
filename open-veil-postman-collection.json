{
  "info": {
    "_postman_id": "a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6",
    "name": "Open Veil API",
    "description": "API endpoints for the Open Veil WordPress plugin",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "username",
      "value": "admin",
      "type": "string"
    },
    {
      "key": "password",
      "value": "password",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Protocols",
      "item": [
        {
          "name": "Get All Protocols",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol"]
            },
            "description": "Get all protocols"
          },
          "response": []
        },
        {
          "name": "Get Protocols (Paginated)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol?page=1&per_page=10",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "10"
                }
              ]
            },
            "description": "Get protocols with pagination. Response includes X-WP-Total and X-WP-TotalPages headers."
          },
          "response": []
        },
        {
          "name": "Get Protocols (Sorted)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol?orderby=title&order=asc",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol"],
              "query": [
                {
                  "key": "orderby",
                  "value": "title"
                },
                {
                  "key": "order",
                  "value": "asc"
                }
              ]
            },
            "description": "Get protocols sorted by title in ascending order. Valid orderby values: id, title, date, modified, author, or meta.field_name (e.g., meta.laser_power)"
          },
          "response": []
        },
        {
          "name": "Get Protocols (Meta Field Sorting)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol?orderby=meta.laser_power&order=desc",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol"],
              "query": [
                {
                  "key": "orderby",
                  "value": "meta.laser_power"
                },
                {
                  "key": "order",
                  "value": "desc"
                }
              ]
            },
            "description": "Get protocols sorted by a meta field (laser_power) in descending order"
          },
          "response": []
        },
        {
          "name": "Get Protocols (Taxonomy Filtered)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol?substance=N,N-DMT&laser_class=Class 2,Class 3R",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol"],
              "query": [
                {
                  "key": "substance",
                  "value": "N,N-DMT"
                },
                {
                  "key": "laser_class",
                  "value": "Class 2,Class 3R"
                }
              ]
            },
            "description": "Get protocols with taxonomy filtering. Comma-separated values use OR logic. Multiple parameters use AND logic."
          },
          "response": []
        },
        {
          "name": "Get Protocols (Taxonomy Filtered by Slug)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol?substance_slug=dmt&laser_class_slug=class-2",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol"],
              "query": [
                {
                  "key": "substance_slug",
                  "value": "dmt"
                },
                {
                  "key": "laser_class_slug",
                  "value": "class-2"
                }
              ]
            },
            "description": "Get protocols with taxonomy filtering by slug"
          },
          "response": []
        },
        {
          "name": "Get Protocols (With Trials Embedded)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol?_embed=trials",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol"],
              "query": [
                {
                  "key": "_embed",
                  "value": "trials"
                }
              ]
            },
            "description": "Get protocols with trial data embedded in the response"
          },
          "response": []
        },
        {
          "name": "Get Protocols (Field Selection)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol?_fields=id,title,meta.laser_power,taxonomies.laser_class",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol"],
              "query": [
                {
                  "key": "_fields",
                  "value": "id,title,meta.laser_power,taxonomies.laser_class"
                }
              ]
            },
            "description": "Get protocols with only specific fields returned. Supports dot notation for nested fields."
          },
          "response": []
        },
        {
          "name": "Get Protocols (Search)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol?search=laser experiment",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol"],
              "query": [
                {
                  "key": "search",
                  "value": "laser experiment"
                }
              ]
            },
            "description": "Search protocols by text in title and content"
          },
          "response": []
        },
        {
          "name": "Get Protocols (Combined Parameters)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol?page=1&per_page=5&orderby=date&order=desc&substance=N,N-DMT&_fields=id,title,meta&_embed=trials",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "5"
                },
                {
                  "key": "orderby",
                  "value": "date"
                },
                {
                  "key": "order",
                  "value": "desc"
                },
                {
                  "key": "substance",
                  "value": "N,N-DMT"
                },
                {
                  "key": "_fields",
                  "value": "id,title,meta"
                },
                {
                  "key": "_embed",
                  "value": "trials"
                }
              ]
            },
            "description": "Get protocols using multiple query parameters: pagination, sorting, filtering, field selection, and embedding"
          },
          "response": []
        },
        {
          "name": "Get Protocol by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol/1001",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol", "1001"]
            },
            "description": "Get a protocol by ID"
          },
          "response": []
        },
        {
          "name": "Get Protocol by ID (With Trials Embedded)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol/1001?_embed=trials",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol", "1001"],
              "query": [
                {
                  "key": "_embed",
                  "value": "trials"
                }
              ]
            },
            "description": "Get a protocol by ID with trial data embedded"
          },
          "response": []
        },
        {
          "name": "Get Protocol by ID (Field Selection)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol/1001?_fields=id,title,meta,_links",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol", "1001"],
              "query": [
                {
                  "key": "_fields",
                  "value": "id,title,meta,_links"
                }
              ]
            },
            "description": "Get a protocol by ID with only specific fields returned"
          },
          "response": []
        },
        {
          "name": "Get Protocol CSL",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol/1001/csl",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol", "1001", "csl"]
            },
            "description": "Get CSL-JSON for a protocol"
          },
          "response": []
        },
        {
          "name": "Create Protocol",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "{{password}}",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "{{username}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"New Protocol Test\",\n  \"content\": \"This is a test protocol created via the API.\",\n  \"meta\": {\n    \"laser_wavelength\": 650,\n    \"laser_power\": 1.0,\n    \"substance_dose\": 1.0,\n    \"projection_distance\": 5\n  },\n  \"taxonomies\": {\n    \"laser_class\": [\"Class 2\"],\n    \"diffraction_grating_spec\": [\"Standard\"],\n    \"equipment\": [\"Laser\", \"Tripod\"],\n    \"substance\": [\"N,N-DMT\"],\n    \"administration_method\": [\"Inhalation\"],\n    \"administration_protocol\": [\"Two inhales\"],\n    \"projection_surface\": [\"Flat non-reflective\"]\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol"]
            },
            "description": "Create a new protocol"
          },
          "response": []
        },
        {
          "name": "Update Protocol",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "{{password}}",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "{{username}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Protocol Title\",\n  \"content\": \"This protocol has been updated via the API.\",\n  \"meta\": {\n    \"laser_wavelength\": 635,\n    \"laser_power\": 1.2,\n    \"substance_dose\": 0.9,\n    \"projection_distance\": 6\n  },\n  \"taxonomies\": {\n    \"laser_class\": [\"Class 3R\"],\n    \"diffraction_grating_spec\": [\"Standard\"],\n    \"equipment\": [\"Laser\", \"Tripod\", \"Diffuser\"],\n    \"substance\": [\"N,N-DMT\"],\n    \"administration_method\": [\"Inhalation\"],\n    \"administration_protocol\": [\"Three inhales\"],\n    \"projection_surface\": [\"Flat non-reflective\"]\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol/1001",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol", "1001"]
            },
            "description": "Update an existing protocol (only parameters provided will be updated)"
          },
          "response": []
        },
        {
          "name": "Update Protocol (Single Field)",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "{{password}}",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "{{username}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"meta\": {\n    \"laser_wavelength\": 650\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol/1001",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol", "1001"]
            },
            "description": "Update just the laser_wavelength field of a protocol"
          },
          "response": []
        },
        {
          "name": "Delete Protocol",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "{{password}}",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "{{username}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/protocol/1001",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "protocol", "1001"]
            },
            "description": "Delete a protocol (only if it has no associated trials)"
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing protocols"
    },
    {
      "name": "Trials",
      "item": [
        {
          "name": "Get All Trials",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial"]
            },
            "description": "Get all trials"
          },
          "response": []
        },
        {
          "name": "Get Trials (Paginated)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial?page=1&per_page=10",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "10"
                }
              ]
            },
            "description": "Get trials with pagination. Response includes X-WP-Total and X-WP-TotalPages headers."
          },
          "response": []
        },
        {
          "name": "Get Trials (Offset Pagination)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial?offset=10&per_page=10",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial"],
              "query": [
                {
                  "key": "offset",
                  "value": "10"
                },
                {
                  "key": "per_page",
                  "value": "10"
                }
              ]
            },
            "description": "Get trials with offset-based pagination"
          },
          "response": []
        },
        {
          "name": "Get Trials (Sorted)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial?orderby=date&order=desc",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial"],
              "query": [
                {
                  "key": "orderby",
                  "value": "date"
                },
                {
                  "key": "order",
                  "value": "desc"
                }
              ]
            },
            "description": "Get trials sorted by date in descending order"
          },
          "response": []
        },
        {
          "name": "Get Trials by Protocol ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial?protocol_id=1001",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial"],
              "query": [
                {
                  "key": "protocol_id",
                  "value": "1001"
                }
              ]
            },
            "description": "Get all trials associated with a specific protocol"
          },
          "response": []
        },
        {
          "name": "Get Trials (Taxonomy Filtered)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial?substance=N,N-DMT&laser_class=Class 2",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial"],
              "query": [
                {
                  "key": "substance",
                  "value": "N,N-DMT"
                },
                {
                  "key": "laser_class",
                  "value": "Class 2"
                }
              ]
            },
            "description": "Get trials with taxonomy filtering"
          },
          "response": []
        },
        {
          "name": "Get Trials (With Protocol Embedded)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial?_embed=protocol",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial"],
              "query": [
                {
                  "key": "_embed",
                  "value": "protocol"
                }
              ]
            },
            "description": "Get trials with protocol data embedded (replaces legacy include_protocol=1)"
          },
          "response": []
        },
        {
          "name": "Get Trials (Legacy Protocol Include)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial?include_protocol=1",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial"],
              "query": [
                {
                  "key": "include_protocol",
                  "value": "1"
                }
              ]
            },
            "description": "Get trials with protocol data using legacy parameter (for backward compatibility)"
          },
          "response": []
        },
        {
          "name": "Get Trials (Field Selection)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial?_fields=id,title,questionnaire.visual_effects",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial"],
              "query": [
                {
                  "key": "_fields",
                  "value": "id,title,questionnaire.visual_effects"
                }
              ]
            },
            "description": "Get trials with only specific fields returned"
          },
          "response": []
        },
        {
          "name": "Get Trials (Search)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial?search=geometric visuals",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial"],
              "query": [
                {
                  "key": "search",
                  "value": "geometric visuals"
                }
              ]
            },
            "description": "Search trials by text in title and content"
          },
          "response": []
        },
        {
          "name": "Get Trials (Combined Parameters)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial?page=1&per_page=5&orderby=date&order=desc&substance=N,N-DMT&_fields=id,title,questionnaire.visual_effects&_embed=protocol",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "5"
                },
                {
                  "key": "orderby",
                  "value": "date"
                },
                {
                  "key": "order",
                  "value": "desc"
                },
                {
                  "key": "substance",
                  "value": "N,N-DMT"
                },
                {
                  "key": "_fields",
                  "value": "id,title,questionnaire.visual_effects"
                },
                {
                  "key": "_embed",
                  "value": "protocol"
                }
              ]
            },
            "description": "Get trials using multiple query parameters"
          },
          "response": []
        },
        {
          "name": "Get Trial by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial/1002",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial", "1002"]
            },
            "description": "Get a trial by ID"
          },
          "response": []
        },
        {
          "name": "Get Trial by ID (With Protocol Embedded)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial/1002?_embed=protocol",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial", "1002"],
              "query": [
                {
                  "key": "_embed",
                  "value": "protocol"
                }
              ]
            },
            "description": "Get a trial by ID with protocol data embedded"
          },
          "response": []
        },
        {
          "name": "Get Trial by ID (Field Selection)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial/1002?_fields=id,title,questionnaire.visual_effects,_links",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial", "1002"],
              "query": [
                {
                  "key": "_fields",
                  "value": "id,title,questionnaire.visual_effects,_links"
                }
              ]
            },
            "description": "Get a trial by ID with only specific fields returned"
          },
          "response": []
        },
        {
          "name": "Get Trial CSL",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial/1002/csl",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial", "1002", "csl"]
            },
            "description": "Get CSL-JSON for a trial"
          },
          "response": []
        },
        {
          "name": "Create Trial",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "{{password}}",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "{{username}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Trial – 2025-04-01\",\n  \"content\": \"Felt presence and geometric visuals after two inhales.\",\n  \"meta\": {\n    \"protocol_id\": 1001,\n    \"laser_wavelength\": 650,\n    \"laser_power\": 0.8,\n    \"substance_dose\": 1.1,\n    \"projection_distance\": 6,\n    \"administration_notes\": \"Deep inhale using a quartz pipe.\",\n    \"additional_observers\": true\n  },\n  \"taxonomies\": {\n    \"laser_class\": [\"Class 2\"],\n    \"diffraction_grating_spec\": [\"Standard\"],\n    \"equipment\": [\"Laser\", \"Tripod\"],\n    \"substance\": [\"N,N-DMT\"],\n    \"administration_method\": [\"Inhalation\"],\n    \"administration_protocol\": [\"Two inhales\"],\n    \"projection_surface\": [\"Flat non-reflective\"]\n  },\n  \"questionnaire\": {\n    \"about_you\": {\n      \"participant_name\": \"Anonymous Researcher\",\n      \"participant_email\": \"anonymous@example.com\",\n      \"psychedelic_experience_level\": \"Experienced\",\n      \"dmt_experience_level\": \"Intermediate\",\n      \"simulation_theory_interest\": \"Very interested\",\n      \"how_found_us\": \"Online search\"\n    },\n    \"experiment_setup\": {\n      \"received_laser_from_us\": false,\n      \"beam_shape\": \"Point\",\n      \"laser_power_source\": \"Battery\",\n      \"accessories_used\": \"Diffraction grating\",\n      \"set_and_setting\": \"Quiet room, low light\",\n      \"experiment_datetime\": \"2025-04-01 20:00\",\n      \"lighting_conditions\": \"Dim\",\n      \"surfaces_used\": \"White wall\",\n      \"additional_setup_info\": \"Room temperature approximately 72°F\"\n    },\n    \"substances_used\": {\n      \"other_substances\": \"None\",\n      \"intoxication_level\": \"Strong\",\n      \"visual_mental_effects\": \"Strong geometric visuals, sense of presence\",\n      \"additional_substance_info\": \"N,N-DMT from reputable source\"\n    },\n    \"visual_effects\": {\n      \"beam_changed\": true,\n      \"beam_changes_description\": \"Beam appeared to split into multiple paths\",\n      \"saw_code_of_reality\": true,\n      \"symbols_seen\": \"Geometric, Alphabetic\",\n      \"symbols_description\": \"Appeared similar to ancient symbols\",\n      \"code_moving\": true,\n      \"movement_direction\": \"Flowing downward\",\n      \"characters_tiny\": true,\n      \"size_changed\": true,\n      \"code_clarity\": \"Very clear\",\n      \"code_behaved_like_object\": true,\n      \"could_influence_code\": false,\n      \"influence_description\": \"\",\n      \"code_persisted_without_laser\": true,\n      \"persisted_when_looked_away\": false,\n      \"persisted_after_turning_off\": true,\n      \"where_else_seen\": \"Closed eye visuals\"\n    },\n    \"other_phenomena\": {\n      \"noticed_anything_else\": \"Strong sense of meaning in the symbols\",\n      \"experiment_duration\": \"15 minutes\",\n      \"questions_comments_suggestions\": \"Would be interesting to try with different colored lasers\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial"]
            },
            "description": "Create a new trial with full questionnaire data"
          },
          "response": []
        },
        {
          "name": "Update Trial",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "{{password}}",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "{{username}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Trial – 2025-04-01\",\n  \"content\": \"This trial has been updated via the API.\",\n  \"meta\": {\n    \"laser_wavelength\": 635,\n    \"laser_power\": 1.0,\n    \"substance_dose\": 1.2,\n    \"projection_distance\": 7,\n    \"administration_notes\": \"Updated admin notes\",\n    \"additional_observers\": false\n  },\n  \"taxonomies\": {\n    \"laser_class\": [\"Class 3R\"],\n    \"equipment\": [\"Laser\", \"Tripod\", \"Diffuser\"]\n  },\n  \"questionnaire\": {\n    \"visual_effects\": {\n      \"beam_changed\": true,\n      \"beam_changes_description\": \"Updated description of beam changes\",\n      \"saw_code_of_reality\": true,\n      \"code_moving\": false\n    },\n    \"other_phenomena\": {\n      \"noticed_anything_else\": \"Updated additional observations\",\n      \"experiment_duration\": \"20 minutes\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial/1002",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial", "1002"]
            },
            "description": "Update an existing trial (only parameters provided will be updated)"
          },
          "response": []
        },
        {
          "name": "Update Trial (Single Field)",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "{{password}}",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "{{username}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"questionnaire\": {\n    \"visual_effects\": {\n      \"beam_changed\": true\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial/1002",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial", "1002"]
            },
            "description": "Update just a single field in the questionnaire"
          },
          "response": []
        },
        {
          "name": "Delete Trial",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "{{password}}",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "{{username}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/trial/1002",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "trial", "1002"]
            },
            "description": "Delete a trial"
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing trials"
    },
    {
      "name": "Schema",
      "item": [
        {
          "name": "Get Schema",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/wp-json/open-veil/v1/schema",
              "host": ["{{base_url}}"],
              "path": ["wp-json", "open-veil", "v1", "schema"]
            },
            "description": "Get schema information including available taxonomies, metadata fields, and questionnaire structure"
          },
          "response": []
        }
      ],
      "description": "Endpoints for schema information"
    }
  ]
}
